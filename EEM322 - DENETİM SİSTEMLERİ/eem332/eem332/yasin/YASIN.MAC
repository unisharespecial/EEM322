
	NOLIST
; PICBASIC PRO(TM) Compiler 2.50, (c) 1998, 2007 microEngineering Labs, Inc. All Rights Reserved.  

LABEL?L macro Label
        RST?RP
    ifdef PM_USED
        LALL
Label
        XALL
    else
Label
    endif
    endm

ADD?BCB macro Bin, Cin, Bout
    if ((Bout) == (Bin))
      if ((Cin) == 1)
        CHK?RP  Bout
        incf    Bout, F
      else
        movlw   Cin
        CHK?RP  Bin
        addwf   Bin, F
      endif
    else
      if ((Cin) == 1)
        CHK?RP  Bin
        incf    Bin, W
        MOVE?AB Bout
      else
        movlw   Cin
        CHK?RP  Bin
        addwf   Bin, W
        MOVE?AB Bout
      endif
    endif
    endm

ADD?WCW macro Win, Cin, Wout
    if ((Wout) == (Win))
        CHK?RP  Wout
      if ((Cin) == 1)
        incf    Wout, F
        btfsc   STATUS, Z
        incf    Wout + 1, F
      else  
        movlw   low (Cin)
        addwf   Wout, F
        if (((Cin) >> 8) == 0)
        btfsc   STATUS, C
        incf    Wout + 1, F
        else
        movlw   (Cin) >> 8
        btfsc   STATUS, C
        addlw   1
        addwf   Wout + 1, F
        endif
      endif
    else
        movlw   low (Cin)
        CHK?RP  Win
        addwf   Win, W
        MOVE?AB Wout
      if (((Cin) >> 8) == 0)
        MOVE?BA Win + 1
        btfsc   STATUS, C
        addlw   1
        MOVE?AB Wout + 1
      else
        movlw   (Cin) >> 8
        btfsc   STATUS, C
        addlw   1
        CHK?RP  Win
        addwf   Win + 1, W
        MOVE?AB Wout + 1
      endif
    endif
    endm

SUB?BCB macro Bin, Cin, Bout
    if ((Bout) == (Bin))
      if ((Cin) == 1)
        CHK?RP  Bout
        decf    Bout, F
      else
        movlw   Cin
        CHK?RP  Bout
        subwf   Bout, F
      endif
    else
      if ((Cin) == 1)
        CHK?RP  Bin
        decf    Bin, W
      else
        movlw   Cin
        CHK?RP  Bin
        subwf   Bin, W
      endif
        MOVE?AB Bout
    endif
    endm

SUB?WCW macro Win, Cin, Wout
    if ((Wout) == (Win))
        movlw   low (Cin)
        CHK?RP  Wout
        subwf   Wout, F
        movlw   (Cin) >> 8
        btfss   STATUS, C
        addlw   1
        subwf   (Wout) + 1, F
    else
        movlw   low (Cin)
        CHK?RP  Win
        subwf   Win, W
        MOVE?AB Wout
        movlw   (Cin) >> 8
        btfss   STATUS, C
        addlw   1
        CHK?RP  Win
        subwf   (Win) + 1, W
        MOVE?AB (Wout) + 1
    endif
    endm

CMPEQ?TCL macro Regin, Bitin, Cin, Label
    if (((Cin) == 0) | ((Cin) == 1))
        CLRWDT?
        BIT?GOTO Cin, Regin, Bitin, Label
    endif
    endm

CMPNE?BCL macro Bin, Cin, Label
    if (((Cin) > -100h) & ((Cin) < 100h))
        CLRWDT?
        MOVE?BA Bin
        sublw   Cin
        BIT?GOTO 0, STATUS, Z, Label
    else
        L?GOTO  Label
    endif
    endm

CMPNE?TCL macro Regin, Bitin, Cin, Label
    if ((Cin) == 0)
        CLRWDT?
        BIT?GOTO 1, Regin, Bitin, Label
    else
      if ((Cin) == 1)
        CLRWDT?
        BIT?GOTO 0, Regin, Bitin, Label
      else
        L?GOTO  Label
      endif
    endif
    endm

CMPNE?WCL macro Win, Cin, Label
    if (((Cin) > -10000h) & ((Cin) < 10000h))
        MOVE?CW	Cin, R0
        MOVE?WWA Win, R1
        L?CALL  CMPNE
        BIT?GOTO 0, STATUS, Z, Label
    else
        L?GOTO  Label
    endif
    endm
CMPNE_USED = 1

COUNT?TWB macro Regin, Bitin, Win, Bout
        MOVE?WW Win, R1
        BIT?FW  Regin, Bitin
        L?CALL  COUNTT
        MOVE?AB Bout
    endm
COUNTT_USED = 1

GOSUB?L macro Label
    local dlabel
    ifdef DEBUG_STACK
        CHK?RP  DEBUG_STACK
      ifdef DEBUG_STACK_ADDR
        bcf     STATUS, C
        rlf     DEBUG_STACK, W
        addlw   DEBUG_STACK_ADDR
        movwf   FSR
        movlw   low (dlabel)
        movwf   INDF
        incf    FSR, F
        movlw   (dlabel) >> 8
        movwf   INDF
      endif
        incf    DEBUG_STACK, F
    endif
        L?CALL  Label
dlabel
    endm

GOTO?L macro Label
        L?GOTO  Label
    endm

LOOKUP?BCLB macro Bin, Cin, Label, Bout
    local dojump, valtbl
        MOVE?BA Bin
        sublw   (Cin) - 1
        BIT?GOTO 0, STATUS, C, Label
        L?CALL  dojump
        MOVE?AB Bout
        L?GOTO  Label
dojump  movlw   high (valtbl)
        movwf   PCLATH
        MOVE?BA Bin
        RST?RP
        TABLE?C Cin
valtbl
    endm

LURET?C macro Cin
        retlw   Cin
    endm

PAUSE?C macro Cin
    if (((Cin) >> 8) == 0)
        MOVE?CA Cin
        L?CALL  PAUSE
    else
        MOVE?CB (Cin) >> 8, R1 + 1
        MOVE?CA low (Cin)
        L?CALL  PAUSEL
    endif
    endm
PAUSE_USED = 1

RETURN? macro
    ifdef DEBUG_STACK
        CHK?RP  DEBUG_STACK
        decf    DEBUG_STACK, F
    endif
        RST?RP
        return
    endm


	LIST
